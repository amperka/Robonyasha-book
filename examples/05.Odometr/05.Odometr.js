var motor = require('@amperka/motor');
var leftMotor = motor.connect(motor.MotorShield.M1);
leftMotor.write(-0.85);

var encoder = require('@amperka/digital-line-sensor').connect(P10);

var RADIUS = 31;
var WHEEL_LENGTH = 2 * Math.PI * RADIUS;
var STEP = 1 / 12;

var revolutions = 0;
encoder.on('white', function() {
  revolutions = revolutions + STEP;
  var distance = revolutions * WHEEL_LENGTH;
  print(distance, 'mm');
});

/*
(7-8) Создадим переменную RADIUS, в которой будем хранить радиус колеса. Колесо Робоняши имеет радиус 31 миллиметр. В переменной WHEEL_LENGTH будем хранить значение длины окружности колеса. Длина окружности и радиус колеса — величины постоянные. Они не изменятся в процессе выполнения программы, поэтому запишем их заглавными символами. Ими будем обозначать все неизменяемые величины — константы. Колесо вместе с резиновой шиной имеет длину окружности 195 миллиметров. Можешь проверить: возьми нитку и оберни один раз вокруг колеса. Длина этой нитки будет равна длине окружности колеса.
(9) Создадим переменную STEP для хранения значения шага поворота колеса. За один оборот колеса энкодер 12 раз повстречает отверстия, поэтому шаг в 12 раз меньше длины окружности колеса. Шаг, как и длина окружности колеса, величина неизменяемая, поэтому пишем её заглавными символами.
(11) Создадим переменную revolutions, в которой будем запоминать количество оборотов колеса. Во время каждого срабатывания энкодера количество оборотов колеса будет увеличиваться на величину шага.
(12-15) Энкодер срабатывает каждый раз, когда «видит» отверстие в колесе. Энкодер будет говорить нам, что колесо повернулось ещё на шаг. Найдём общее расстояние distance, умножив количество оборотов на длину окружности колеса. А функцией print() выведем в консоль расстояние в миллиметрах.
*/
