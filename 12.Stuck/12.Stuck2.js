var SPEED = 0.5;
var DISTANCE_MIN = 10;
var DISTANCE_MAX = 14;

var clingy = require('@amperka/robot-2wd').connect();

var ultrasonic = require('@amperka/ultrasonic').connect({
    trigPin: P12,
    echoPin: P13
});

var check = function(distance) {
    if (distance > DISTANCE_MAX) {
        clingy.go({l: SPEED, r: SPEED});
    } else if (distance < DISTANCE_MIN) {
        clingy.go({l: -SPEED, r: -SPEED});
    } else {
        clingy.stop();
    }
};

setInterval(function() {
    ultrasonic.ping(function(error, value) {
        if (!error) {
            check(value);
        }
    }, 'cm');
}, 100)

/*
(2-3) Константами DISTANCE_ MIN и DISTANCE_MAX будем задавать минимальное  и максимальное расстояние
    до ладони в сантиметрах.
(7-10) Библиотека для работы с УЗ-датчиком называется '@amperka/ultrasonic'.
    В функцию connect передаём объект с указанием пинов, к которым подключены сигнальные пины датчика.
    trigPin — пин управления передатчиком, echoPin —  сигнальный пин приёмника.
(13-19) Если расстояние до руки больше допустимого, робот едет вперёд. Если меньше — едет назад.
    Если расстояние в заданных пределах — робот просто стоит.
(23) Функция ping() объекта ultrasonic измеряет расстояние до объекта.
    Результат измерения передаётся в функцию в виде переменной value.
    Единицы измерения расстояния указываются во втором аргументе функции ping().
    Мы сейчас использовали сантиметры, но также есть и другие величины: миллиметры и метры. 
(24) Иногда произвести измерения не удаётся.
    Например, расстояние до предмета слишком велико или измерения выполняются слишком часто.
    В этом случае переменная error не будет пустой, а будет содержать информацию о характере ошибки.
    После каждого измерения всегда проверяй error на наличие ошибок.
*/
